{
    "manifests": {
        "shopware/paas-meta": {
            "manifest": {
                "copy-from-recipe": {
                    "root/": "",
                    "bin/": "%BIN_DIR%/",
                    "config/": "%CONFIG_DIR%/"
                },
                "container": {
                    "default_redis_database": "0",
                    "default_redis_host": "rediscache.internal",
                    "default_redis_port": "6379"
                },
                "gitignore": [
                    "!/files/theme-config"
                ],
                "post-install-output": [
                    "  * Before you can deploy your Shopware PaaS shop, you have to adjust your root <comment>composer.json</comment>",
                    "    * Add <comment>platformsh-env.php</comment> to your autoload.files section."
                ]
            },
            "files": {
                "bin/prestart_cacheclear.sh": {
                    "contents": [
                        "#!/usr/bin/env sh",
                        "# This script is run as part of the .platform.app.yaml deployment step",
                        "# On dedicated generation 2 clusters, this should be setup by Platform.sh team as part of pre_start hook",
                        "",
                        "set -e",
                        "",
                        "echo \"removing var/cache/${APP_ENV}_*/*.*\"",
                        "rm -Rf var/cache/${APP_ENV}_*/*.*",
                        "",
                        "echo \"clearing application cache\"",
                        "php bin/console cache:clear",
                        "",
                        "echo \"done executing pre_start cache clear\""
                    ],
                    "executable": true
                },
                "config/packages/paas.yaml": {
                    "contents": [
                        "# This file contains all default configuration or PaaS",
                        "",
                        "framework:",
                        "    session:",
                        "        handler_id: \"redis://%env(string:default:default_redis_host:REDIS_HOST)%:%env(int:default:default_redis_port:REDIS_PORT)%/%env(int:default:default_redis_database:REDIS_SESSION_DATABASE)%\"",
                        "    cache:",
                        "        app: cache.adapter.redis",
                        "        system: cache.adapter.redis",
                        "        default_redis_provider: \"redis://%env(string:default:default_redis_host:REDIS_HOST)%:%env(int:default:default_redis_port:REDIS_PORT)%/%env(int:default:default_redis_database:REDIS_CACHE_DATABASE)%\"",
                        "",
                        "monolog:",
                        "    handlers:",
                        "        business_event_handler_buffer:",
                        "            level: error",
                        "",
                        "when@prod:",
                        "    monolog:",
                        "        handlers:",
                        "            main:",
                        "                type: fingers_crossed",
                        "                action_level: error",
                        "                handler: nested",
                        "                excluded_http_codes: [404, 405]",
                        "                buffer_size: 50 # How many messages should be saved? Prevent memory leaks",
                        "            nested:",
                        "                type: stream",
                        "                path: php://stderr",
                        "                level: debug",
                        "                formatter: monolog.formatter.json",
                        "            console:",
                        "                type: console",
                        "                process_psr_3_messages: false",
                        "                channels: [\"!event\", \"!doctrine\"]",
                        "",
                        "storefront:",
                        "    theme:",
                        "        config_loader_id: Shopware\\Storefront\\Theme\\ConfigLoader\\StaticFileConfigLoader",
                        "        available_theme_provider: Shopware\\Storefront\\Theme\\ConfigLoader\\StaticFileAvailableThemeProvider"
                    ],
                    "executable": false
                },
                "root/.platform.app.yaml": {
                    "contents": [
                        "# This file describes an application. You can have multiple applications",
                        "# in the same project.",
                        "",
                        "# The name of this app. Must be unique within a project.",
                        "name: app",
                        "",
                        "# The type of the application to build.",
                        "type: php:8.1",
                        "build:",
                        "    flavor: composer",
                        "",
                        "dependencies:",
                        "    php:",
                        "        composer/composer: '^2'",
                        "",
                        "variables:",
                        "    env:",
                        "        # Tell Shopware to always install in production-mode.",
                        "        APP_ENV: prod",
                        "        # Instance ID is empty by default, change to something unique in your project",
                        "        INSTANCE_ID: ''",
                        "        # Enable HTTP Cache to get cache-control headers",
                        "        SHOPWARE_HTTP_CACHE_ENABLED: 1",
                        "        # NVM and Node.js versions to install",
                        "        NVM_VERSION: v0.39.0",
                        "        NODE_VERSION: v16.0.0",
                        "        # Use different redis dbs for cache and sessions",
                        "        REDIS_CACHE_DATABASE: 0",
                        "        REDIS_SESSION_DATABASE: 2",
                        "",
                        "        # Improve admin build speed",
                        "        DISABLE_ADMIN_COMPILATION_TYPECHECK: 1",
                        "",
                        "        # Only build extension. Shopware assets are pre built in the tags",
                        "        SHOPWARE_ADMIN_BUILD_ONLY_EXTENSIONS: 1",
                        "    php:",
                        "        upload_max_filesize: 32M",
                        "        post_max_size: 32M",
                        "        memory_limit: 512M",
                        "        'assert.active': 0",
                        "        'opcache.enable_file_override': 1",
                        "        'opcache.interned_strings_buffer': 20",
                        "        'opcache.validate_timestamps': 0",
                        "        'zend.detect_unicode': 0",
                        "        realpath_cache_ttl: 3600",
                        "        'opcache.memory_consumption': 128M",
                        "        'opcache.max_accelerated_files': 20000",
                        "",
                        "# Specify additional PHP extensions that should be loaded.",
                        "runtime:",
                        "    extensions:",
                        "        - ctype",
                        "        - dom",
                        "        - iconv",
                        "        - mbstring",
                        "        - fileinfo",
                        "        - intl",
                        "        - redis",
                        "        - sodium",
                        "",
                        "# The hooks that will be performed when the package is deployed.",
                        "hooks:",
                        "    build: |",
                        "        set -e",
                        "        # install nvm",
                        "        unset NPM_CONFIG_PREFIX",
                        "        export NVM_DIR=\"$PLATFORM_APP_DIR/.nvm\"",
                        "        # install.sh will automatically install NodeJS based on the presence of $NODE_VERSION",
                        "        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh | bash",
                        "        [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"",
                        "        # have nvm available and load the correct node version in your ssh session",
                        "        echo 'unset NPM_CONFIG_PREFIX' >> .bash_profile",
                        "        echo 'export NO_UPDATE_NOTIFIER=1' >> .bash_profile",
                        "        echo 'export NVM_DIR=\"$PLATFORM_APP_DIR/.nvm\"' >> .bash_profile",
                        "        echo '[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"' >> .bash_profile",
                        "        # Disable UI installer",
                        "        touch install.lock",
                        "        # compile theme and save config for later (will be moved to mount).",
                        "        # warnings can be ignored (the process is trying to access Redis which is not yet available)",
                        "        export CI=true",
                        "        ./bin/build-js.sh",
                        "        mkdir build-tmp",
                        "        cp -R files/theme-config build-tmp",
                        "        # save plugin config for later (will be moved to mount)",
                        "        cp var/plugins.json build-plugins.json",
                        "        # Remove hashtag to enable fastly",
                        "        # mv config/packages/fastly.yaml.dist config/packages/fastly.yaml",
                        "    deploy: |",
                        "        set -e",
                        "        # load nvm to use the correct node version for any following commands",
                        "        unset NPM_CONFIG_PREFIX",
                        "        export NO_UPDATE_NOTIFIER=1",
                        "        export NVM_DIR=\"$PLATFORM_APP_DIR/.nvm\"",
                        "        [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"",
                        "        # restore theme config from build to mount in case theme needs rebuilding during runtime",
                        "        cp -R build-tmp/theme-config files/",
                        "        # restore plugin config to mount",
                        "        cp build-plugins.json var/plugins.json",
                        "        # Initialize the Shopware site's data set if it's not already installed.",
                        "        # (This is only for demo/first install and can be removed once Shopware is initialized)",
                        "        if [ ! -f $PLATFORM_APP_DIR/installer/installed ]; then",
                        "            # setup the environment",
                        "            # create database with a basic setup (admin user and storefront sales channel).",
                        "            # this will try to run theme:compile which cannot be disabled, so it will throw a bunch of warnings",
                        "            # that can be ignored (we use stateless build anyway, so this is done already at this point)",
                        "            echo \"Running system:install (Warnings for theme:compile can be ignored)\"",
                        "            bin/console system:install --create-database --basic-setup --force",
                        "            bin/console theme:change --all Storefront --no-compile",
                        "            bin/console theme:dump",
                        "            # generate JWT",
                        "            echo \"Running system:generate-jwt-secret\"",
                        "            bin/console system:generate-jwt-secret || true",
                        "            # refresh plugins and enable PaaS Plugin",
                        "            bin/console plugin:refresh",
                        "            bin/console plugin:install --activate SwagPaas",
                        "            # mark system as installed",
                        "            touch $PLATFORM_APP_DIR/installer/installed",
                        "        fi;",
                        "        if [ \"$PLATFORM_ENVIRONMENT_TYPE\" != production ]; then",
                        "            export FRONTEND_URL=`echo $PLATFORM_ROUTES | base64 --decode | jq -r 'to_entries[] | select(.value.id==\"shopware\") | .key'`",
                        "            export FRONTEND_DOMAIN=`php -r 'echo parse_url($_SERVER[\"FRONTEND_URL\"], PHP_URL_HOST);'`",
                        "            bin/console sales-channel:update:domain \"$FRONTEND_DOMAIN\"",
                        "        fi",
                        "        # optional: run migration automatically with deploy",
                        "        bin/console database:migrate --all",
                        "        # run cache clear commands, on grid environments this should run in the deploy hook,",
                        "        # on dedicated generation 2, it will run as part of the pre_start hook (to be set up by Platform.sh support)",
                        "        if [ -z \"$PLATFORM_REGISTRY_NUMBER\" ]; then",
                        "            sh prestart_cacheclear.sh",
                        "        else",
                        "            # on dedicated gen 2, we need to explictly clear the redis cache since redis is not available during pre_start",
                        "            bin/console cache:pool:clear cache.object",
                        "        fi",
                        "",
                        "        if [ -e setup-fastly.sh ]; then",
                        "            ./setup-fastly.sh",
                        "        fi",
                        "# The relationships of the application with services or other applications.",
                        "# The left-hand side is the name of the relationship as it will be exposed",
                        "# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand",
                        "# side is in the form `<service name>:<endpoint name>`.",
                        "relationships:",
                        "    database: \"db:mysql\"",
                        "    rediscache: \"cacheredis:redis\"",
                        "    # uncomment if you want to use elasticsearch",
                        "    # essearch: \"searchelastic:elasticsearch\"",
                        "    # uncomment if you want to use rabbitmq",
                        "    # rabbitmqqueue: \"queuerabbit:rabbitmq\"",
                        "",
                        "# The size of the persistent disk of the application (in MB).",
                        "disk: 2048",
                        "",
                        "# The mounts that will be performed when the package is deployed.",
                        "mounts:",
                        "    \"/files\":",
                        "        source: local",
                        "        source_path: \"files\"",
                        "    \"/public/media\":",
                        "        source: local",
                        "        source_path: \"public/media\"",
                        "    \"/public/thumbnail\":",
                        "        source: local",
                        "        source_path: \"public/thumbnail\"",
                        "    \"/config/secrets\":",
                        "        source: local",
                        "        source_path: \"config/secrets\"",
                        "    \"/config/jwt\":",
                        "        source: local",
                        "        source_path: \"config/jwt\"",
                        "    \"/var\":",
                        "        source: local",
                        "        source_path: \"var\"",
                        "    \"/installer\":",
                        "        source: local",
                        "        source_path: \"installer\"",
                        "    \"/.global\":",
                        "        source: local",
                        "        source_path: \"global\"",
                        "    \"/.cache\":",
                        "        source: local",
                        "        source_path: \".cache\"",
                        "    \"/custom/apps\":",
                        "        source: local",
                        "        source_path: \"custom/apps\"",
                        "    \"/custom/plugins\":",
                        "        source: local",
                        "        source_path: \"custom/plugins\"",
                        "",
                        "# The configuration of app when it is exposed to the web.",
                        "web:",
                        "    locations:",
                        "        \"/\":",
                        "            # The public directory of the app, relative to its root.",
                        "            root: \"public\"",
                        "            # The front-controller script to send non-static requests to.",
                        "            passthru: \"/index.php\"",
                        "            expires: 24h",
                        "            rules:",
                        "                \\.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|cast|mp4|json|yaml|ico|svg?|cast|mp4|json|yaml|svg?|ttf)$:",
                        "                    expires: 4w",
                        "",
                        "workers:",
                        "    queue:",
                        "        disk: 128",
                        "        commands:",
                        "            start: |",
                        "                bin/console messenger:consume default --memory-limit=$(cat /run/config.json | jq .info.limits.memory)M --time-limit=295",
                        "    scheduled-task:",
                        "        disk: 128",
                        "        commands:",
                        "            start: |",
                        "                bin/console scheduled-task:run --memory-limit=$(cat /run/config.json | jq .info.limits.memory)M --time-limit=295",
                        ""
                    ],
                    "executable": false
                },
                "root/.platform/routes.yaml": {
                    "contents": [
                        "# The routes of the project.",
                        "#",
                        "# Each route describes how an incoming URL is going",
                        "# to be processed by Platform.sh.",
                        "",
                        "\"https://{default}/\":",
                        "    type: upstream",
                        "    id: shopware",
                        "    upstream: \"app:http\"",
                        "    cache:",
                        "        enabled: true",
                        "        cookies: ['/^ss?ess/']"
                    ],
                    "executable": false
                },
                "root/.platform/services.yaml": {
                    "contents": [
                        "db:",
                        "    type: mariadb:10.6",
                        "    disk: 2048",
                        "",
                        "cacheredis:",
                        "    type: redis:7.0",
                        "    configuration:",
                        "        maxmemory_policy: volatile-ttl",
                        "",
                        "# uncomment if you want to use elasticsearch",
                        "# searchelastic:",
                        "#     type: elasticsearch:7.9",
                        "#     disk: 256",
                        "",
                        "# uncomment if you want to use rabbitmq",
                        "# queuerabbit:",
                        "#     type: rabbitmq:3.8",
                        "#     disk: 1024"
                    ],
                    "executable": false
                },
                "root/files/theme-config/6753315de5ae4e9081228ff9d6e7b802.json": {
                    "contents": [
                        "{\"themeConfig\":{\"blocks\":{\"themeColors\":{\"label\":{\"en-GB\":\"Theme colours\",\"de-DE\":\"Theme-Farben\"}},\"typography\":{\"label\":{\"en-GB\":\"Typography\",\"de-DE\":\"Typografie\"}},\"eCommerce\":{\"label\":{\"en-GB\":\"E-Commerce\",\"de-DE\":\"E-Commerce\"}},\"statusColors\":{\"label\":{\"en-GB\":\"Status messages\",\"de-DE\":\"Status-Ausgaben\"}},\"media\":{\"label\":{\"en-GB\":\"Media\",\"de-DE\":\"Medien\"}},\"unordered\":{\"label\":{\"en-GB\":\"Misc\",\"de-DE\":\"Sonstige\"}}},\"fields\":{\"sw-color-brand-primary\":{\"label\":{\"en-GB\":\"Primary colour\",\"de-DE\":\"Prim\\u00e4rfarbe\"},\"type\":\"color\",\"value\":\"#008490\",\"editable\":true,\"block\":\"themeColors\",\"order\":100},\"sw-color-brand-secondary\":{\"label\":{\"en-GB\":\"Secondary colour\",\"de-DE\":\"Sekund\\u00e4rfarbe\"},\"type\":\"color\",\"value\":\"#526e7f\",\"editable\":true,\"block\":\"themeColors\",\"order\":200},\"sw-border-color\":{\"label\":{\"en-GB\":\"Border\",\"de-DE\":\"Rahmen\"},\"type\":\"color\",\"value\":\"#bcc1c7\",\"editable\":true,\"block\":\"themeColors\",\"order\":300},\"sw-background-color\":{\"label\":{\"en-GB\":\"Background\",\"de-DE\":\"Hintergrund\"},\"type\":\"color\",\"value\":\"#fff\",\"editable\":true,\"block\":\"themeColors\",\"order\":400},\"sw-color-success\":{\"label\":{\"en-GB\":\"Success\",\"de-DE\":\"Erfolg\"},\"type\":\"color\",\"value\":\"#3cc261\",\"editable\":true,\"block\":\"statusColors\",\"order\":100},\"sw-color-info\":{\"label\":{\"en-GB\":\"Information\",\"de-DE\":\"Information\"},\"type\":\"color\",\"value\":\"#26b6cf\",\"editable\":true,\"block\":\"statusColors\",\"order\":200},\"sw-color-warning\":{\"label\":{\"en-GB\":\"Notice\",\"de-DE\":\"Hinweis\"},\"type\":\"color\",\"value\":\"#ffbd5d\",\"editable\":true,\"block\":\"statusColors\",\"order\":300},\"sw-color-danger\":{\"label\":{\"en-GB\":\"Error\",\"de-DE\":\"Fehler\"},\"type\":\"color\",\"value\":\"#e52427\",\"editable\":true,\"block\":\"statusColors\",\"order\":400},\"sw-font-family-base\":{\"label\":{\"en-GB\":\"Fonttype text\",\"de-DE\":\"Schriftart Text\"},\"type\":\"fontFamily\",\"value\":\"'Inter', sans-serif\",\"editable\":true,\"block\":\"typography\",\"order\":100},\"sw-text-color\":{\"label\":{\"en-GB\":\"Text colour\",\"de-DE\":\"Textfarbe\"},\"type\":\"color\",\"value\":\"#4a545b\",\"editable\":true,\"block\":\"typography\",\"order\":200},\"sw-font-family-headline\":{\"label\":{\"en-GB\":\"Fonttype headline\",\"de-DE\":\"Schriftart \\u00dcberschrift\"},\"type\":\"fontFamily\",\"value\":\"'Inter', sans-serif\",\"editable\":true,\"block\":\"typography\",\"order\":300},\"sw-headline-color\":{\"label\":{\"en-GB\":\"Headline colour\",\"de-DE\":\"\\u00dcberschriftfarbe\"},\"type\":\"color\",\"value\":\"#4a545b\",\"editable\":true,\"block\":\"typography\",\"order\":400},\"sw-color-price\":{\"label\":{\"en-GB\":\"Price\",\"de-DE\":\"Preis\"},\"type\":\"color\",\"value\":\"#4a545b\",\"editable\":true,\"block\":\"eCommerce\",\"order\":100},\"sw-color-buy-button\":{\"label\":{\"en-GB\":\"Buy button\",\"de-DE\":\"Kaufen-Button\"},\"type\":\"color\",\"value\":\"#008490\",\"editable\":true,\"block\":\"eCommerce\",\"order\":200},\"sw-color-buy-button-text\":{\"label\":{\"en-GB\":\"Buy button text\",\"de-DE\":\"Kaufen-Button Text\"},\"type\":\"color\",\"value\":\"#fff\",\"editable\":true,\"block\":\"eCommerce\",\"order\":300},\"sw-logo-desktop\":{\"label\":{\"en-GB\":\"Desktop\",\"de-DE\":\"Desktop\"},\"helpText\":{\"en-GB\":\"Displayed for viewports of above 991px\",\"de-DE\":\"Wird \\u00fcber einem Viewport von 991px angezeigt\"},\"type\":\"media\",\"value\":\"790fc674240a45cbb4dc5dba98920fe8\",\"editable\":true,\"block\":\"media\",\"order\":100,\"fullWidth\":true},\"sw-logo-tablet\":{\"label\":{\"en-GB\":\"Tablet\",\"de-DE\":\"Tablet\"},\"helpText\":{\"en-GB\":\"Displayed between a viewport of 767px to 991px\",\"de-DE\":\"Wird zwischen einem viewport von 767px bis 991px angezeigt\"},\"type\":\"media\",\"value\":\"790fc674240a45cbb4dc5dba98920fe8\",\"editable\":true,\"block\":\"media\",\"order\":200,\"fullWidth\":true},\"sw-logo-mobile\":{\"label\":{\"en-GB\":\"Mobile\",\"de-DE\":\"Mobil\"},\"helpText\":{\"en-GB\":\"Displayed up to a viewport of 767px\",\"de-DE\":\"Wird bis zu einem Viewport von 767px angezeigt\"},\"type\":\"media\",\"value\":\"790fc674240a45cbb4dc5dba98920fe8\",\"editable\":true,\"block\":\"media\",\"order\":300,\"fullWidth\":true},\"sw-logo-share\":{\"label\":{\"en-GB\":\"App & share icon\",\"de-DE\":\"App- & Share-Icon\"},\"type\":\"media\",\"value\":\"\",\"editable\":true,\"block\":\"media\",\"order\":400},\"sw-logo-favicon\":{\"label\":{\"en-GB\":\"Favicon\",\"de-DE\":\"Favicon\"},\"type\":\"media\",\"value\":\"d095060a4539402a9c686948ff307a0b\",\"editable\":true,\"block\":\"media\",\"order\":500}},\"sw-color-brand-primary\":{\"name\":\"sw-color-brand-primary\",\"label\":{\"en-GB\":\"Primary colour\",\"de-DE\":\"Prim\\u00e4rfarbe\"},\"helpText\":null,\"type\":\"color\",\"value\":\"#008490\",\"editable\":true,\"block\":\"themeColors\",\"section\":null,\"tab\":null,\"order\":100,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-color-brand-secondary\":{\"name\":\"sw-color-brand-secondary\",\"label\":{\"en-GB\":\"Secondary colour\",\"de-DE\":\"Sekund\\u00e4rfarbe\"},\"helpText\":null,\"type\":\"color\",\"value\":\"#526e7f\",\"editable\":true,\"block\":\"themeColors\",\"section\":null,\"tab\":null,\"order\":200,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-border-color\":{\"name\":\"sw-border-color\",\"label\":{\"en-GB\":\"Border\",\"de-DE\":\"Rahmen\"},\"helpText\":null,\"type\":\"color\",\"value\":\"#bcc1c7\",\"editable\":true,\"block\":\"themeColors\",\"section\":null,\"tab\":null,\"order\":300,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-background-color\":{\"name\":\"sw-background-color\",\"label\":{\"en-GB\":\"Background\",\"de-DE\":\"Hintergrund\"},\"helpText\":null,\"type\":\"color\",\"value\":\"#fff\",\"editable\":true,\"block\":\"themeColors\",\"section\":null,\"tab\":null,\"order\":400,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-color-success\":{\"name\":\"sw-color-success\",\"label\":{\"en-GB\":\"Success\",\"de-DE\":\"Erfolg\"},\"helpText\":null,\"type\":\"color\",\"value\":\"#3cc261\",\"editable\":true,\"block\":\"statusColors\",\"section\":null,\"tab\":null,\"order\":100,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-color-info\":{\"name\":\"sw-color-info\",\"label\":{\"en-GB\":\"Information\",\"de-DE\":\"Information\"},\"helpText\":null,\"type\":\"color\",\"value\":\"#26b6cf\",\"editable\":true,\"block\":\"statusColors\",\"section\":null,\"tab\":null,\"order\":200,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-color-warning\":{\"name\":\"sw-color-warning\",\"label\":{\"en-GB\":\"Notice\",\"de-DE\":\"Hinweis\"},\"helpText\":null,\"type\":\"color\",\"value\":\"#ffbd5d\",\"editable\":true,\"block\":\"statusColors\",\"section\":null,\"tab\":null,\"order\":300,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-color-danger\":{\"name\":\"sw-color-danger\",\"label\":{\"en-GB\":\"Error\",\"de-DE\":\"Fehler\"},\"helpText\":null,\"type\":\"color\",\"value\":\"#e52427\",\"editable\":true,\"block\":\"statusColors\",\"section\":null,\"tab\":null,\"order\":400,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-font-family-base\":{\"name\":\"sw-font-family-base\",\"label\":{\"en-GB\":\"Fonttype text\",\"de-DE\":\"Schriftart Text\"},\"helpText\":null,\"type\":\"fontFamily\",\"value\":\"'Inter', sans-serif\",\"editable\":true,\"block\":\"typography\",\"section\":null,\"tab\":null,\"order\":100,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-text-color\":{\"name\":\"sw-text-color\",\"label\":{\"en-GB\":\"Text colour\",\"de-DE\":\"Textfarbe\"},\"helpText\":null,\"type\":\"color\",\"value\":\"#4a545b\",\"editable\":true,\"block\":\"typography\",\"section\":null,\"tab\":null,\"order\":200,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-font-family-headline\":{\"name\":\"sw-font-family-headline\",\"label\":{\"en-GB\":\"Fonttype headline\",\"de-DE\":\"Schriftart \\u00dcberschrift\"},\"helpText\":null,\"type\":\"fontFamily\",\"value\":\"'Inter', sans-serif\",\"editable\":true,\"block\":\"typography\",\"section\":null,\"tab\":null,\"order\":300,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-headline-color\":{\"name\":\"sw-headline-color\",\"label\":{\"en-GB\":\"Headline colour\",\"de-DE\":\"\\u00dcberschriftfarbe\"},\"helpText\":null,\"type\":\"color\",\"value\":\"#4a545b\",\"editable\":true,\"block\":\"typography\",\"section\":null,\"tab\":null,\"order\":400,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-color-price\":{\"name\":\"sw-color-price\",\"label\":{\"en-GB\":\"Price\",\"de-DE\":\"Preis\"},\"helpText\":null,\"type\":\"color\",\"value\":\"#4a545b\",\"editable\":true,\"block\":\"eCommerce\",\"section\":null,\"tab\":null,\"order\":100,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-color-buy-button\":{\"name\":\"sw-color-buy-button\",\"label\":{\"en-GB\":\"Buy button\",\"de-DE\":\"Kaufen-Button\"},\"helpText\":null,\"type\":\"color\",\"value\":\"#008490\",\"editable\":true,\"block\":\"eCommerce\",\"section\":null,\"tab\":null,\"order\":200,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-color-buy-button-text\":{\"name\":\"sw-color-buy-button-text\",\"label\":{\"en-GB\":\"Buy button text\",\"de-DE\":\"Kaufen-Button Text\"},\"helpText\":null,\"type\":\"color\",\"value\":\"#fff\",\"editable\":true,\"block\":\"eCommerce\",\"section\":null,\"tab\":null,\"order\":300,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-logo-desktop\":{\"name\":\"sw-logo-desktop\",\"label\":{\"en-GB\":\"Desktop\",\"de-DE\":\"Desktop\"},\"helpText\":{\"en-GB\":\"Displayed for viewports of above 991px\",\"de-DE\":\"Wird \\u00fcber einem Viewport von 991px angezeigt\"},\"type\":\"media\",\"value\":\"https:\\/\\/pr-18-yjncdpi-p272hx6fwtpmm.eu-5.platformsh.site\\/\\/media\\/4b\\/7c\\/5f\\/1622109741\\/demostore-logo.png\",\"editable\":true,\"block\":\"media\",\"section\":null,\"tab\":null,\"order\":100,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":true,\"extensions\":[]},\"sw-logo-tablet\":{\"name\":\"sw-logo-tablet\",\"label\":{\"en-GB\":\"Tablet\",\"de-DE\":\"Tablet\"},\"helpText\":{\"en-GB\":\"Displayed between a viewport of 767px to 991px\",\"de-DE\":\"Wird zwischen einem viewport von 767px bis 991px angezeigt\"},\"type\":\"media\",\"value\":\"https:\\/\\/pr-18-yjncdpi-p272hx6fwtpmm.eu-5.platformsh.site\\/\\/media\\/4b\\/7c\\/5f\\/1622109741\\/demostore-logo.png\",\"editable\":true,\"block\":\"media\",\"section\":null,\"tab\":null,\"order\":200,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":true,\"extensions\":[]},\"sw-logo-mobile\":{\"name\":\"sw-logo-mobile\",\"label\":{\"en-GB\":\"Mobile\",\"de-DE\":\"Mobil\"},\"helpText\":{\"en-GB\":\"Displayed up to a viewport of 767px\",\"de-DE\":\"Wird bis zu einem Viewport von 767px angezeigt\"},\"type\":\"media\",\"value\":\"https:\\/\\/pr-18-yjncdpi-p272hx6fwtpmm.eu-5.platformsh.site\\/\\/media\\/4b\\/7c\\/5f\\/1622109741\\/demostore-logo.png\",\"editable\":true,\"block\":\"media\",\"section\":null,\"tab\":null,\"order\":300,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":true,\"extensions\":[]},\"sw-logo-share\":{\"name\":\"sw-logo-share\",\"label\":{\"en-GB\":\"App & share icon\",\"de-DE\":\"App- & Share-Icon\"},\"helpText\":null,\"type\":\"media\",\"value\":\"\",\"editable\":true,\"block\":\"media\",\"section\":null,\"tab\":null,\"order\":400,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]},\"sw-logo-favicon\":{\"name\":\"sw-logo-favicon\",\"label\":{\"en-GB\":\"Favicon\",\"de-DE\":\"Favicon\"},\"helpText\":null,\"type\":\"media\",\"value\":\"https:\\/\\/pr-18-yjncdpi-p272hx6fwtpmm.eu-5.platformsh.site\\/\\/media\\/ee\\/67\\/8a\\/1622109741\\/favicon.png\",\"editable\":true,\"block\":\"media\",\"section\":null,\"tab\":null,\"order\":500,\"sectionOrder\":null,\"blockOrder\":null,\"tabOrder\":null,\"custom\":null,\"scss\":null,\"fullWidth\":null,\"extensions\":[]}},\"technicalName\":\"Storefront\",\"name\":\"Shopware default theme\",\"previewMedia\":\"vendor\\/shopware\\/storefront\\/Resources\\/app\\/storefront\\/dist\\/assets\\/defaultThemePreview.jpg\",\"author\":\"shopware AG\",\"isTheme\":true,\"styleFiles\":[{\"filepath\":\"\\/app\\/vendor\\/shopware\\/storefront\\/Resources\\/app\\/storefront\\/src\\/scss\\/base.scss\",\"resolveMapping\":{\"vendor\":\"\\/app\\/vendor\\/shopware\\/storefront\\/Resources\\/app\\/storefront\\/vendor\"},\"extensions\":[]},{\"filepath\":\"\\/app\\/vendor\\/shopware\\/storefront\\/Resources\\/app\\/storefront\\/src\\/scss\\/skin\\/shopware\\/_base.scss\",\"resolveMapping\":{\"vendor\":\"\\/app\\/vendor\\/shopware\\/storefront\\/Resources\\/app\\/storefront\\/vendor\"},\"extensions\":[]},{\"filepath\":\"@Plugins\",\"resolveMapping\":[],\"extensions\":[]}],\"scriptFiles\":[{\"filepath\":\"vendor\\/shopware\\/storefront\\/Resources\\/app\\/storefront\\/dist\\/js\\/vendor-node.js\",\"resolveMapping\":[],\"extensions\":[]},{\"filepath\":\"vendor\\/shopware\\/storefront\\/Resources\\/app\\/storefront\\/dist\\/js\\/vendor-shared.js\",\"resolveMapping\":[],\"extensions\":[]},{\"filepath\":\"vendor\\/shopware\\/storefront\\/Resources\\/app\\/storefront\\/dist\\/js\\/runtime.js\",\"resolveMapping\":[],\"extensions\":[]},{\"filepath\":\"vendor\\/shopware\\/storefront\\/Resources\\/app\\/storefront\\/dist\\/storefront\\/js\\/storefront.js\",\"resolveMapping\":[],\"extensions\":[]},{\"filepath\":\"@Plugins\",\"resolveMapping\":[],\"extensions\":[]}],\"storefrontEntryFilepath\":\"vendor\\/shopware\\/storefront\\/Resources\\/app\\/storefront\\/src\\/main.js\",\"basePath\":\"vendor\\/shopware\\/storefront\\/Resources\",\"assetPaths\":[\"vendor\\/shopware\\/storefront\\/Resources\\/app\\/storefront\\/dist\\/assets\"],\"viewInheritance\":[],\"iconSets\":[],\"extensions\":[]}"
                    ],
                    "executable": false
                },
                "root/files/theme-config/index.json": {
                    "contents": [
                        "{\"a3b6618b39d549fc87c97fb2422d085f\":\"6753315de5ae4e9081228ff9d6e7b802\"}"
                    ],
                    "executable": false
                },
                "root/platformsh-env.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "namespace Platformsh\\ShopwareBridge;",
                        "",
                        "use Platformsh\\ConfigReader\\Config;",
                        "",
                        "mapPlatformShEnvironment();",
                        "",
                        "/**",
                        " * Map Platform.Sh environment variables to the values Shopware expects expects.",
                        " *",
                        " * This is wrapped up into a function to avoid executing code in the global",
                        " * namespace.",
                        " *",
                        " * Note: Most values are already handled by the Symfony Flex bridge. This file is just",
                        " * for the additional variables required by Shopware.",
                        " */",
                        "function mapPlatformShEnvironment() : void",
                        "{",
                        "    $config = new Config();",
                        "",
                        "    if (!$config->inRuntime()) {",
                        "        return;",
                        "    }",
                        "",
                        "    $config->registerFormatter('redis', __NAMESPACE__ . '\\redisFormatter');",
                        "    $config->registerFormatter('elasticsearch', __NAMESPACE__ . '\\elasticsearchFormatter');",
                        "    $config->registerFormatter('rabbitmq', __NAMESPACE__ . '\\rabbitmqFormatter');",
                        "",
                        "    // Set the URL based on the route.  This is a required route ID.",
                        "    setEnvVar('APP_URL', $config->getRoute('shopware')['url']);",
                        "",
                        "    // Map services as feasible.",
                        "    mapPlatformShRedis('rediscache', $config);",
                        "    mapPlatformShElasticsearch('essearch', $config);",
                        "    mapPlatformShRabbitmq('rabbitmqqueue', $config);",
                        "}",
                        "",
                        "/**",
                        " * Sets an environment variable in all the myriad places PHP can store it.",
                        " *",
                        " * @param string $name",
                        " *   The name of the variable to set.",
                        " * @param null|string $value",
                        " *   The value to set.  Null to unset it.",
                        " */",
                        "function setEnvVar(string $name, $value) : void",
                        "{",
                        "    if (!putenv(\"$name=$value\")) {",
                        "        throw new \\RuntimeException('Failed to create environment variable: ' . $name);",
                        "    }",
                        "    $order = ini_get('variables_order');",
                        "    if (stripos($order, 'e') !== false) {",
                        "        $_ENV[$name] = $value;",
                        "    }",
                        "    if (stripos($order, 's') !== false) {",
                        "        if (strpos($name, 'HTTP_') !== false) {",
                        "            throw new \\RuntimeException('Refusing to add ambiguous environment variable ' . $name . ' to $_SERVER');",
                        "        }",
                        "        $_SERVER[$name] = $value;",
                        "    }",
                        "}",
                        "",
                        "/**",
                        " * Maps the specified relationship to the REDIS_URL environment variable, if available.",
                        " *",
                        " * @param string $relationshipName",
                        " *   The database relationship name.",
                        " * @param Config $config",
                        " *   The config object.",
                        " */",
                        "function mapPlatformShRedis(string $relationshipName, Config $config) : void",
                        "{",
                        "    if (!$config->hasRelationship($relationshipName)) {",
                        "        return;",
                        "    }",
                        "    $redis_credentials = $config->credentials($relationshipName);",
                        "    setEnvVar('REDIS_HOST', (string)$redis_credentials['host']);",
                        "    setEnvVar('REDIS_PORT', $redis_credentials['port']);",
                        "",
                        "    setEnvVar('REDIS_URL', $config->formattedCredentials($relationshipName, 'redis'));",
                        "}",
                        "",
                        "function redisFormatter(array $credentials): string",
                        "{",
                        "    return \"redis://{$credentials['host']}:{$credentials['port']}\";",
                        "}",
                        "",
                        "/**",
                        " * Maps the specified relationship to the elasticsearch environment variables, if available.",
                        " *",
                        " * @param string $relationshipName",
                        " *   The search index relationship name.",
                        " * @param Config $config",
                        " *   The config object.",
                        " */",
                        "function mapPlatformShElasticsearch(string $relationshipName, Config $config) : void",
                        "{",
                        "    if (!$config->hasRelationship($relationshipName)) {",
                        "        return;",
                        "    }",
                        "",
                        "    setEnvVar('SHOPWARE_ES_HOSTS', $config->formattedCredentials($relationshipName, 'elasticsearch'));",
                        "    setEnvVar('SHOPWARE_ES_INDEXING_ENABLED', '1');",
                        "    setEnvVar('SHOPWARE_ES_INDEX_PREFIX', 'sw6');",
                        "    // uncomment to enable elasticsearch",
                        "    // see https://developer.shopware.com/docs/guides/hosting/infrastructure/elasticsearch#activating-and-first-time-indexing",
                        "    // setEnvVar('SHOPWARE_ES_ENABLED', '1');",
                        "}",
                        "",
                        "function elasticsearchFormatter(array $credentials): string",
                        "{",
                        "    return \"http://{$credentials['host']}:{$credentials['port']}\";",
                        "}",
                        "",
                        "/**",
                        " * Maps the specified relationship to the rabbitmq environment variables, if available.",
                        " *",
                        " * @param string $relationshipName",
                        " *   The search index relationship name.",
                        " * @param Config $config",
                        " *   The config object.",
                        " */",
                        "function mapPlatformShRabbitmq(string $relationshipName, Config $config) : void",
                        "{",
                        "    if (!$config->hasRelationship($relationshipName)) {",
                        "        return;",
                        "    }",
                        "",
                        "    setEnvVar('RABBITMQ_URL', $config->formattedCredentials($relationshipName, 'rabbitmq'));",
                        "}",
                        "",
                        "function rabbitmqFormatter(array $credentials): string",
                        "{",
                        "    return \"amqp://{$credentials['username']}:{$credentials['password']}@{$credentials['host']}:{$credentials['port']}/%2F?connection_timeout=1000&heartbeat=100&auto_setup=false\";",
                        "}"
                    ],
                    "executable": false
                }
            },
            "ref": "ccbe4d618d4db168a5f728efdb44c0ffd1beef84"
        }
    }
}
